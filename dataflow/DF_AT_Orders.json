{
	"name": "DF_AT_Orders",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "sourceAzureTableOrders"
				},
				{
					"name": "sourceAzuretableCustomers"
				}
			],
			"sinks": [
				{
					"name": "output"
				}
			],
			"transformations": [
				{
					"name": "joinOrdersCustomers"
				},
				{
					"name": "CustomersOrdersSelected"
				},
				{
					"name": "UnitPrice"
				},
				{
					"name": "SellingPrice"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as string,",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Quantity as integer,",
				"          OrderTimestamp as timestamp,",
				"          Price as double,",
				"          CustomerID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> sourceAzureTableOrders",
				"source(output(",
				"          CustomerID as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          PhoneNumber as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          ZipCode as string,",
				"          Country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> sourceAzuretableCustomers",
				"sourceAzureTableOrders, sourceAzuretableCustomers join(sourceAzureTableOrders@CustomerID == sourceAzuretableCustomers@CustomerID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinOrdersCustomers",
				"SellingPrice select(mapColumn(",
				"          OrderID,",
				"          ProductID,",
				"          ProductName,",
				"          Quantity,",
				"          CustomerID = sourceAzuretableCustomers@CustomerID,",
				"          FirstName,",
				"          LastName,",
				"          Email,",
				"          PhoneNumber,",
				"          Address,",
				"          {Unit Price},",
				"          {Selling Price}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CustomersOrdersSelected",
				"joinOrdersCustomers derive({Unit Price} = Price/Quantity) ~> UnitPrice",
				"UnitPrice derive({Selling Price} = Quantity*{Unit Price}) ~> SellingPrice",
				"CustomersOrdersSelected sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     format: 'table') ~> output"
			]
		}
	}
}